copy
  (
select
  coalesce (persistent_id,tender_id) as tender_id,
  regexp_replace(title, E'[\\n\\r]+', ' ', 'g' ) title,
  procedure_type,
  national_procedure_type,
  is_awarded,
  supply_type,
  bid_deadline,
  is_central_procurement,
  is_joint_procurement,
  on_behalf_of_body_count,
  is_on_behalf_of,
  lots_count,
  recorded_bids_count,
  documents_count,
  npwp_reasons,
  is_framework_agreement,
  is_dps,
  estimated_duration_in_days,
  contract_signature_date,
  cpvs,
  main_cpv_first,
  is_eu_funded,
  selection_method,
  award_criteria_count,
  is_electronic_auction,
  cancellation_date,
  regexp_replace(cancellation_reason, E'[\\n\\r]+', ' ', 'g' ) cancellation_reason,
  award_deadline,
  is_gpa, 
  eligible_languages,
  round(tender_estimated_price) tender_estimated_price,
  round(tender_final_price) tender_final_price,
  round(lot_estimated_price) lot_estimated_price,
  round(bid_final_price) bid_final_price,
  corrections_count,
  lot_number,
  regexp_replace(lot_title, E'[\\n\\r]+', ' ', 'g' ) lot_title,
  bids_count,
  valid_bids_count,
  electronic_bids_count,
  sme_bids_count,
  other_eu_member_states_companies_bids_count,
  non_eu_member_states_companies_bids_count,
  foreign_companies_bids_count,
  buyer_id ,
  buyer_master_id ,
  buyer_name ,
  buyer_nuts ,
  buyer_email ,
  buyer_contact_name ,
  buyer_contact_point ,
  buyer_city ,
  buyer_country ,
  buyer_main_activity ,
  buyer_type ,
  buyer_postcode,
  bidder_id ,
  bidder_master_id ,
  bidder_name ,
  bidder_nuts ,
  bidder_city ,
  bidder_country ,
  is_winning,
  is_subcontracted,
  subcontracted_proportion,
  is_consortium,
  award_count,
  notice_count,
  cancellation_date,
  source,
  award_url,
  award_date,
  notice_url,
  notice_date_last,
  notice_date_first,
  year,
  --cpv_category,
  case when award_count > 0 then
  ( 
	100 - 100*round((coalesce(bid_final_price,tender_final_price,0) / (coalesce(lot_estimated_price,tender_estimated_price,bid_final_price,tender_final_price,1) + 0.000001))::numeric,5) 
  ) else null end as savings,
  award_date - coalesce(notice_date_first,notice_date_last) as award_period_length,
  trim(both '{}' from implementation_nuts) implementation_nuts,
  award_criteria_count,
    description_length ,
  lot_description_length ,
  personal_reqs_length ,
  technical_reqs_length ,
  economic_reqs_length,
  flag_single_bid ,
  flag_centralized ,
  flag_advertisement_period ,
  flag_decision_period ,
  flag_gpa ,
  flag_eauction ,
  flag_framework ,
  flag_english_allowed ,
  flag_cft_missing ,
  flag_procedure_type ,
  flag_new_company ,
  flag_tax_haven ,
  flag_political_tie ,
  flag_publication_rate ,
  flag_desc_length ,
  flag_eligibility_length ,
  flag_evaluation_criteria,
	opentender
from 
digiwhist_staging.master_tender_analytics
--master_tender_analytics_staging_local 

--where source = 'https://riigihanked.riik.ee/'
where source = 'http://contrataciondelestado.es'
--where source = 'http://ted.europa.eu'
--where source = 'http://www.uvo.gov.sk'
--where source = 'https://vestnikverejnychzakazek.cz'
--where source = 'https://www.contractsfinder.service.gov.uk/'
--where source = 'http://kozbeszerzes.hu/'
--where source = 'ftp://open.iub.gov.lv'
--where source = 'http://www.boamp.fr'
--where source = 'https://www.tenderned.nl'
--order by persistent_id
) to '/data/dump/2018-01-05-digiwhist-es.csv' delimiter ',' CSV HEADER ENCODING 'utf-8'; 
