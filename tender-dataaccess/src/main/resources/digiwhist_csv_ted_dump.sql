\ï»¿copy
  (
select
  coalesce (persistent_id,tender_id) as tender_id,
  regexp_replace(title, E'[\\n\\r]+', ' ', 'g' ) tender_title,
  procedure_type as tender_procedureType,
  national_procedure_type as tender_nationalProcedureType,
  is_awarded as tender_isAwarded,
  supply_type as tender_supplyType,
  --size,
  bid_deadline as tender_bidDeadline,
  is_central_procurement as tender_isCentralProcurement,
  is_joint_procurement as tender_isJointProcurement,
  on_behalf_of_body_count as tender_onBehalfOf_count,
  is_on_behalf_of as tender_isOnBehalfOf,
  lots_count as tender_lotsCount,
  recorded_bids_count tender_recordedBidsCount,
  documents_count as tender_documents_count,
  npwp_reasons as tender_npwp_reasons,
  is_framework_agreement as tender_isFrameworkAgreement,
  is_dps as tender_isDps,
  estimated_duration_in_days as tender_estimatedDurationInDays,
  contract_signature_date as tender_contractSignatureDate,
  cpvs as tender_cpvs,
  main_cpv_first as tender_mainCpv,
  is_eu_funded as tender_isEUFunded,
  selection_method as tender_selectionMethod,
  award_criteria_count as tender_awardCriteria_count,
  is_electronic_auction as tender_isElectronicAuction,
  cancellation_date as tender_cancellationDate,
  regexp_replace(cancellation_reason, E'[\\n\\r]+', ' ', 'g' ) cancellation_reason,
  award_deadline as tender_awardDecisionDate,
  is_gpa as tender_isCoveredByGpa,
  eligible_languages as tender_eligibleBidLanguages,
  round(tender_estimated_price) tender_estimatedPrice,
  round(tender_final_price) tender_finalPrice,
  round(lot_estimated_price) lot_estimatedPrice,
  round(bid_final_price) bid_price,
  corrections_count as tender_corrections_count,
  lot_number as lot_row_nr,
  regexp_replace(lot_title, E'[\\n\\r]+', ' ', 'g' ) lot_title,
  --status,
  bids_count as lot_bidsCount,
  valid_bids_count as lot_validBidsCount,
  electronic_bids_count as lot_electronicBidsCount,
  sme_bids_count as lot_smeBidsCount,
  other_eu_member_states_companies_bids_count as lot_otherEuMemberStatesCompaniesBidsCount,
  non_eu_member_states_companies_bids_count as lot_nonEuMemberStatesCompaniesBidsCount,
  foreign_companies_bids_count as lot_foreignCompaniesBidsCount,
  buyer_id as buyer_id,
  buyer_master_id as buyer_masterId,
  buyer_name as buyer_name,
  buyer_nuts as buyer_nuts,
  buyer_email as buyer_email,
  buyer_contact_name as buyer_contactName,
  buyer_contact_point as buyer_contactPoint,
  buyer_city as buyer_city,
  buyer_country as buyer_country,
  buyer_main_activity as buyer_mainActivities,
  buyer_type as buyer_buyerType,
  buyer_postcode as buyer_postcode,
  bidder_id as bidder_id,
  bidder_master_id as bidder_masterId,
  bidder_name as bidder_name,
  bidder_nuts as bidder_nuts,
  bidder_city as bidder_city,
  bidder_country as bidder_country,
  is_winning as bid_isWinning,
  is_subcontracted as bid_isSubcontracted,
  subcontracted_proportion as bid_subcontractedProportion,
  is_consortium as bid_isConsortium,
  award_count,
  notice_count,
  source,
  award_url as tender_publications_lastContractAwardUrl,
  award_date as tender_publications_firstdContractAwardDate,
  notice_url,
  notice_date_last as tender_publications_lastCallForTenderDate,
  notice_date_first as tender_publications_firstCallForTenderDate,
  year as tender_year,
  --cpv_category,
  case when award_count > 0 then
  ( 
	100 - 100*round((coalesce(bid_final_price,tender_final_price,0) / (coalesce(lot_estimated_price,tender_estimated_price,bid_final_price,tender_final_price,1) + 0.000001))::numeric,5) 
  ) else null end as savings,
  award_date - coalesce(notice_date_first,notice_date_last) as award_period_length,
  trim(both '{}' from implementation_nuts) tender_addressOfImplementation_nuts,
  description_length as tender_description_length,
  lot_description_length as lot_description_length,
  personal_reqs_length  as tender_personalRequirements_length,
  technical_reqs_length as tender_technicalRequirements_length,
  economic_reqs_length as tender_economicRequirements_length,
  flag_single_bid as tender_indicator_INTEGRITY_SINGLE_BID,
  flag_centralized as tender_indicator_ADMINISTRATIVE_CENTRALIZED_PROCUREMENT,
  flag_advertisement_period as tender_indicator_INTEGRITY_ADVERTISEMENT_PERIOD,
  flag_decision_period as tender_indicator_INTEGRITY_DECISION_PERIOD,
  flag_gpa as tender_indicator_ADMINISTRATIVE_COVERED_BY_GPA,
  flag_eauction as tender_indicator_ADMINISTRATIVE_ELECTRONIC_AUCTION,
  flag_framework as tender_indicator_ADMINISTRATIVE_FRAMEWORK_AGREEMENT,
  flag_english_allowed as tender_indicator_ADMINISTRATIVE_ENGLISH_AS_FOREIGN_LANGUAGE,
  flag_cft_missing as tender_indicator_INTEGRITY_CALL_FOR_TENDER_PUBLICATION,
  flag_procedure_type as tender_indicator_INTEGRITY_PROCEDURE_TYPE,
  flag_new_company as tender_indicator_INTEGRITY_NEW_COMPANY,
  flag_tax_haven as tender_indicator_INTEGRITY_TAX_HAVEN,
	opentender,
  currency,
  tender_digiwhist_price,
  bid_digiwhist_price
from 
tender_staging.master_tender_analytics
where tender_country = 'SK'
) to '/tmp/2018-08-20-digiwhist-sk.csv' delimiter ',' CSV HEADER ENCODING 'utf-8'; 